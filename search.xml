<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Computer Architecture(已经停更了)</title>
    <url>/2023/11/20/Computer-Architecture/</url>
    <content><![CDATA[<h1 id="计算机体系结构量化研究方法"><a href="#计算机体系结构量化研究方法" class="headerlink" title="计算机体系结构量化研究方法"></a>计算机体系结构量化研究方法</h1><h2 id="第1章-量化设计与分析基础"><a href="#第1章-量化设计与分析基础" class="headerlink" title="第1章 量化设计与分析基础"></a>第1章 量化设计与分析基础</h2><h3 id="1-5-功耗和能耗（Power-and-Energy-在集成电路方面的趋势"><a href="#1-5-功耗和能耗（Power-and-Energy-在集成电路方面的趋势" class="headerlink" title="1.5 功耗和能耗（Power and Energy)在集成电路方面的趋势"></a>1.5 功耗和能耗（Power and Energy)在集成电路方面的趋势</h3><ul>
<li><p>单次逻辑脉冲的能耗（由晶体管频繁放电充电导致的）</p>
</li>
<li><p>$$ E_{dynamic} \varpropto \frac{1}{2}CU^2·f $$</p>
</li>
<li><p>现代未处理器减少动态功耗的方法</p>
<ol>
<li>不执行相关操作，如未使用核心时,禁止提供时钟</li>
<li>动态电压-频率调整</li>
<li>针对典型场景的设计</li>
<li>超频(单线程时超频，关闭其他核心)</li>
</ol>
</li>
</ul>
<span id="more"></span>
<ul>
<li>维持状态不变的功率</li>
<li><p>$$ E_{static} \varpropto Current_{static}·Voltage $$</p>
</li>
<li><p>竞相停止（race to halt， 选择性断电？）</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>Computer Architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World(经典的新手启航)</title>
    <url>/2023/11/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>此贴只是用于测试mathjax渲染</title>
    <url>/2023/11/24/test/</url>
    <content><![CDATA[<p>在Hexo上用mathjax渲染公式还是有些麻烦的,请使用 \\\$ 替换 \$ 符号</p>
<p>批量替换时需要好好注意</p>
<p>$ evidence_{i}=\sum_{j}W_{ij}x_{j}+b_{i} $</p>
]]></content>
  </entry>
  <entry>
    <title>vue3中使用ref和reative</title>
    <url>/2024/07/02/2024/vue3-ref/</url>
    <content><![CDATA[<p>在vue3中ref和reative(仅仅用于复杂数据类型)都会被用来包装数据类型，使之具有响应性</p>
<p>但是两者在script中引用数值时使用时有一定的不同</p>
<p>ref需要使用.value来访问具体数值,在赋予新数值时只需修改.value即可</p>
<p>reative虽然可以直接访问属性,但赋值的时候需要谨慎考虑，赋值对象需要用reactive进行修饰，不然可能会失去响应性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="title function_">ref</span>(<span class="number">1.0</span>)</span><br><span class="line">a.<span class="property">value</span> = <span class="number">2.0</span> <span class="comment">// OK</span></span><br><span class="line">a = <span class="number">2.0</span> <span class="comment">// const 会阻止赋值</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="title function_">reactive</span>(&#123;<span class="attr">a</span>:<span class="number">10</span>&#125;) <span class="comment">// 只能是复杂对象</span></span><br><span class="line">b.<span class="property">a</span> = <span class="number">20</span> <span class="comment">// OK</span></span><br><span class="line">b = &#123;<span class="attr">a</span>:<span class="number">20</span>&#125; <span class="comment">// 失去响应性</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Vue3</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>否定前缀</title>
    <url>/2024/07/16/2024/negtive-prefix/</url>
    <content><![CDATA[<p>转载：<a href="https://www.ruanyifeng.com/blog/2006/06/un_in.html">https://www.ruanyifeng.com/blog/2006/06/un_in.html</a></p>
<p>在英语的学习过程中我们往往会遇到很多对反义词，它们往往会以un, in等前缀开头，但是对于具体的一个词，我们应该添加一个怎样的前缀去得到它的反义词是比较令人困扰的。<br><span id="more"></span></p>
<ul>
<li>un<ul>
<li>通常是用这个作为前缀，特别是对于一些简单的词来说。<ul>
<li>比如 unfair、unclean、uneven</li>
</ul>
</li>
<li>如果一个词的后缀是英语后缀，通常用un-。<ul>
<li>比如 unceasing(-ing)、unmindful(-ful)、unwealthy(-y)、unselfish(-ish)、unwholesome(-some)。</li>
</ul>
</li>
</ul>
</li>
<li>in/ir/im/il<ul>
<li>如果一个词的后缀是拉丁语后缀，通常用in-。<ul>
<li>比如，inaccurate(-ate)、incapacity(-ty)、indivisible(-ible)、insignificant(-ant)、illegal(-al)、impossible(-able)、irregular(-ar) 。</li>
</ul>
</li>
<li>ir/im/il是in的变体<ul>
<li>ir后跟r开头的单词，il后跟l开头的单词, im后跟b/m/p开头的单词</li>
</ul>
</li>
</ul>
</li>
<li>通常来说不同的后缀会导致不同的修饰前缀<ul>
<li>比如 unjust－injustice</li>
</ul>
</li>
<li>-ed结尾的单词用un</li>
<li>-ing结尾的单词un</li>
<li>有些拉丁后缀的词也与 un-连用<ul>
<li>比如unconditional、unconventional、unfortunate</li>
</ul>
</li>
<li></li>
</ul>
]]></content>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
</search>
