<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>计算机体系结构(已经停更了)</title>
    <url>/2023/11/20/Computer-Architecture/</url>
    <content><![CDATA[<h1 id="计算机体系结构量化研究方法"><a href="#计算机体系结构量化研究方法" class="headerlink" title="计算机体系结构量化研究方法"></a>计算机体系结构量化研究方法</h1><h2 id="第1章-量化设计与分析基础"><a href="#第1章-量化设计与分析基础" class="headerlink" title="第1章 量化设计与分析基础"></a>第1章 量化设计与分析基础</h2><h3 id="1-5-功耗和能耗（Power-and-Energy-在集成电路方面的趋势"><a href="#1-5-功耗和能耗（Power-and-Energy-在集成电路方面的趋势" class="headerlink" title="1.5 功耗和能耗（Power and Energy)在集成电路方面的趋势"></a>1.5 功耗和能耗（Power and Energy)在集成电路方面的趋势</h3><ul>
<li><p>单次逻辑脉冲的能耗（由晶体管频繁放电充电导致的）</p>
<p>$$ E_{dynamic} \varpropto \frac{1}{2}CU^2·f $$</p>
</li>
<li><p>现代微处理器减少动态功耗的方法</p>
<ol>
<li>不执行相关操作，如未使用核心时,禁止提供时钟</li>
<li>动态电压-频率调整</li>
<li>针对典型场景的设计</li>
<li>超频(单线程时超频，关闭其他核心)</li>
</ol>
</li>
</ul>
<span id="more"></span>

<ul>
<li><p>维持状态不变的功率</p>
</li>
<li><p>$$ E_{static} \varpropto Current_{static}·Voltage $$</p>
</li>
<li><p>竞相停止（race to halt， 选择性断电？）</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>Computer Architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Django使用</title>
    <url>/2024/10/08/Django/</url>
    <content><![CDATA[<p>本文简要介绍一些关于关于Django的项目部署的相关内容</p>
<span id="more"></span>

<h3 id="1-通常的项目项目结构"><a href="#1-通常的项目项目结构" class="headerlink" title="1. 通常的项目项目结构"></a>1. 通常的项目项目结构</h3><ul>
<li>Site<ul>
<li>__pycache__</li>
<li>__init__</li>
<li><a href="#settings">settings.py(关于Hello项目的相关配置)</a></li>
<li><a href="#urls">urls.py(关于Hello项目URL映射信息, 路径访问等)</a></li>
<li><a href='#views'>views.py(配置相应内容以及不同请求方式的处理)</a></li>
<li>wsgi.py</li>
<li>asig.py</li>
</ul>
</li>
<li>Apps<ul>
<li>admin.py</li>
<li>apps.py</li>
<li><a herf='#models'>models.py(DB相关)</a></li>
<li><a herf="#views">views.py(同上)</a></li>
</ul>
</li>
<li>manage.py (Django 的命令行启动工具)</li>
</ul>
<h3 id="2-settings-py"><a href="#2-settings-py" class="headerlink" title="2. settings.py "></a><span id='settings'>2. settings.py </span></h3><ul>
<li><p>DEBUG(<font color='red'>bool</font>):</p>
<p>  <font color='green'>True</font>：启动调试模式,运行时显示调试信息</p>
</li>
<li><p>ALLOWED_HOST(<font color='red'>list</font>):</p>
<p>Debug为<font color='green'>True</font>且ALLOWED_HOST为<font color='green'>[]</font>时等价于:</p>
<div align='center'><font color='green'>['.localhost', '127.0.0.1', '[::1]']</font></div>
 也就是说允许请求头中host为localhost/127.0.0.1的请求去访问
</li>
<li><p>LANGAGE_CODE(语言,<font color='red'>str</font>):</p>
<p><font color='green'>‘en-us’</font>:英文</p>
<p><font color='green'>‘zh-Hans’</font>:中文</p>
</li>
<li><p>TIME_ZONE(时区):</p>
</li>
<li><p>ROOT_URLCONF(主路由):</p>
</li>
</ul>
<h3 id="3-urls-py"><a href="#3-urls-py" class="headerlink" title="3. urls.py"></a><span id='urls'>3. urls.py</span></h3><ul>
<li>urlpatterns(路由请求,<font color='red'>list</font>):<ul>
<li>path</li>
<li>re_path(正则表达式匹配): 一般形式为^(?P&lt;name&gt;)$</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> Site <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(route=<span class="string">&#x27;test&#x27;</span>, view=views.test_html, name=<span class="string">&quot;test&quot;</span>),</span><br><span class="line">    path(route=<span class="string">&quot;&quot;</span>, view=views.home, name=<span class="string">&quot;home&quot;</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h3 id="4-views-py"><a href="#4-views-py" class="headerlink" title="4. views.py"></a><span id='views'>4. views.py</span></h3><p>使用函数定义返回数据，通常返回HttpResponse,可以自定义status_code，header等</p>
<p>也可以使用<strong>django.shortcut.render</strong>函数对模版中的内容进行填充。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcut <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;Hello Django!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_html</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;test.html&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>如果考虑前后端分离的话，模版的内容粗略了解即可</p>
<h3 id="5-models-py"><a href="#5-models-py" class="headerlink" title="5.models.py"></a><span id='models'>5.models.py</span></h3><p>主要根据数据库中的内容相关,主要封装同数据库的基本交互功能。</p>
<p>通常使用class来声明数据库中的对象和objs</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Book</span>(models.Model):</span><br><span class="line">    title = models.CharField(<span class="string">&quot;书名&quot;</span>, max_length=<span class="number">50</span>, default=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    price = models.DecimalField(<span class="string">&quot;定价&quot;</span>, max_digits=<span class="number">7</span>, decimal_places=<span class="number">2</span>, default=<span class="number">0.0</span>)</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">        db_table = <span class="string">&#x27;books&#x27;</span></span><br><span class="line"><span class="comment"># 写业务逻辑时调用 Book.objects 中的方法,类似与Mybatis的封装</span></span><br></pre></td></tr></table></figure>

<p>models.py中的内容更新后，需要在终端输入如下指令来同步:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">python3 manage.py makemigrations</span><br><span class="line">python3 manage.py migrate</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Backend</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo相关设置内容</title>
    <url>/2024/10/01/Hexo-related/</url>
    <content><![CDATA[<p>本文只是简单讲述一下如何在Hexo框架下进行基本且必要的配置。</p>
<span id="more"></span>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>关于NexT主题设置</title>
    <url>/2024/10/01/NexT-config/</url>
    <content><![CDATA[<p>本文只是简单讲述一下如何通过配置 themes\next中的文件对原始的next主题博客进行优化处理。</p>
<span id="more"></span>

<h3 id="1-取消文章目录中的自动编号"><a href="#1-取消文章目录中的自动编号" class="headerlink" title="1.取消文章目录中的自动编号"></a>1.取消文章目录中的自动编号</h3><p>在未修改的NexT主题中文章目录中的内容是会被自动编号的，但是通常使用markdown文档的时候我们就已经会按照需求编号了。</p>
<p>NexT的自动编号，会使我们网页中的目录出现如下情况:</p>
<p><img src="/2024/10/01/NexT-config/1.png" alt="1" title="目录中的自动编号"></p>
<p>可以在在 themes\next\_config.yml中找到如下片段</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Maximum heading depth of generated toc.</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span><br></pre></td></tr></table></figure>

<p>将其中的number:true修改为false即可</p>
<h3 id="2-关于鼠标拖尾和点击特效"><a href="#2-关于鼠标拖尾和点击特效" class="headerlink" title="2.关于鼠标拖尾和点击特效"></a>2.关于鼠标拖尾和点击特效</h3><p>参考链接:<a href="https://github.com/sumumm/hexo-next-mouse-effect">自用NexT主题鼠标效果插件</a></p>
<p>或者英语好点可以看这个:<a href="https://github.com/tholman/cursor-effects">Old-school cursor effects for your browser built with modern JavaScript</a></p>
<p>效果图如下:<br><img src="/2024/10/01/NexT-config/cursor_effect.gif" alt="鼠标效果图" title="鼠标拖尾点击效果"></p>
<h3 id="3-图片点击放大"><a href="#3-图片点击放大" class="headerlink" title="3.图片点击放大"></a>3.图片点击放大</h3><p>可以在在 themes\next\_config.yml中找到如下片段</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="4-代码块配置"><a href="#4-代码块配置" class="headerlink" title="4.代码块配置"></a>4.代码块配置</h3><p>在NexT可以在主题配置中对代码块风格进行简单配置，具体找到如下代码片段:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">a11y-dark</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">a11y-dark</span></span><br><span class="line">  <span class="attr">prism:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">prism</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">prism-dark</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">default</span></span><br><span class="line">  <span class="comment"># Fold code block</span></span><br><span class="line">  <span class="attr">fold:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">500</span></span><br></pre></td></tr></table></figure>

<ul>
<li>theme中使用highlight.js进行高亮提示, prism中使用Prism.js进行高亮提示;具体情况需要配合站点配置文件，内部有启用highlight还是prism的设置。</li>
<li>copy_button: 提供一键复制按钮，和一些默认样式</li>
<li>fold:是否折叠代码块</li>
</ul>
]]></content>
      <tags>
        <tag>Frontend</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>编程第一步，你好世界</title>
    <url>/2023/11/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>此贴只是用于测试mathjax渲染</title>
    <url>/2023/11/24/mathjax-test/</url>
    <content><![CDATA[<p>在Hexo上用mathjax渲染公式还是有些麻烦的,请使用 \\$ 替换 \$ 符号</p>
<p>批量替换时需要好好注意</p>
<p>$ evidence_{i}&#x3D;\sum_{j}W_{ij}x_{j}+b_{i} $</p>
]]></content>
  </entry>
  <entry>
    <title>否定前缀</title>
    <url>/2024/07/16/negtive-prefix/</url>
    <content><![CDATA[<p>转载：<a href="https://www.ruanyifeng.com/blog/2006/06/un_in.html">https://www.ruanyifeng.com/blog/2006/06/un_in.html</a></p>
<p>在英语的学习过程中我们往往会遇到很多对反义词，它们往往会以un, in等前缀开头，但是对于具体的一个词，我们应该添加一个怎样的前缀去得到它的反义词是比较令人困扰的。</p>
<span id="more"></span>
<ul>
<li>un<ul>
<li>通常是用这个作为前缀，特别是对于一些简单的词来说。<ul>
<li>比如 unfair、unclean、uneven</li>
</ul>
</li>
<li>如果一个词的后缀是英语后缀，通常用un-。<ul>
<li>比如 unceasing(-ing)、unmindful(-ful)、unwealthy(-y)、unselfish(-ish)、unwholesome(-some)。</li>
</ul>
</li>
</ul>
</li>
<li>in&#x2F;ir&#x2F;im&#x2F;il<ul>
<li>如果一个词的后缀是拉丁语后缀，通常用in-。<ul>
<li>比如，inaccurate(-ate)、incapacity(-ty)、indivisible(-ible)、insignificant(-ant)、illegal(-al)、impossible(-able)、irregular(-ar) 。</li>
</ul>
</li>
<li>ir&#x2F;im&#x2F;il是in的变体<ul>
<li>ir后跟r开头的单词，il后跟l开头的单词, im后跟b&#x2F;m&#x2F;p开头的单词</li>
</ul>
</li>
</ul>
</li>
<li>通常来说不同的后缀会导致不同的修饰前缀<ul>
<li>比如 unjust－injustice</li>
</ul>
</li>
<li>-ed结尾的单词用un</li>
<li>-ing结尾的单词un</li>
<li>有些拉丁后缀的词也与 un-连用<ul>
<li>比如unconditional、unconventional、unfortunate</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>vue3中使用ref和reative</title>
    <url>/2024/07/02/ref-and-reactive/</url>
    <content><![CDATA[<p>在vue3中ref和reative(仅仅用于复杂数据类型)都会被用来包装数据类型，使之具有响应性</p>
<p>但是两者在script中引用数值时使用时有一定的不同</p>
<p>ref需要使用.value来访问具体数值,在赋予新数值时只需修改.value即可</p>
<p>reative虽然可以直接访问属性,但赋值的时候需要谨慎考虑，赋值对象需要用reactive进行修饰，不然可能会失去响应性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="title function_">ref</span>(<span class="number">1.0</span>)</span><br><span class="line">a.<span class="property">value</span> = <span class="number">2.0</span> <span class="comment">// OK</span></span><br><span class="line">a = <span class="number">2.0</span> <span class="comment">// const 会阻止赋值</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="title function_">reactive</span>(&#123;<span class="attr">a</span>:<span class="number">10</span>&#125;) <span class="comment">// 只能是复杂对象</span></span><br><span class="line">b.<span class="property">a</span> = <span class="number">20</span> <span class="comment">// OK</span></span><br><span class="line">b = &#123;<span class="attr">a</span>:<span class="number">20</span>&#125; <span class="comment">// 失去响应性</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Frontend</tag>
        <tag>Vue3</tag>
      </tags>
  </entry>
  <entry>
    <title>Git常用命令</title>
    <url>/2024/10/11/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>此处简单介绍一些可能比较常用的git指令，当然在 command 或者 bash 上敲代码是相当令人不爽的，本文后续应该会推荐一些好用的GUI工具帮助分析(有待填坑)。</p>
<span id="more"></span>

<h3 id="1-git-删除未跟踪的文件和文件夹"><a href="#1-git-删除未跟踪的文件和文件夹" class="headerlink" title="1. git 删除未跟踪的文件和文件夹"></a>1. git 删除未跟踪的文件和文件夹</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除未跟踪文件</span></span><br><span class="line">git clean -f</span><br><span class="line"><span class="comment"># 删除未跟踪文件和文件夹</span></span><br><span class="line">git clean -fd</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
</search>
